openapi: 3.0.1
info:
    title: Simple Roster API
    description: 'TAO Simple Roster API'
    version: v1

servers:
    -   url: https://localhost/api

paths:
    /v1:
        get:
            summary: Health check
            tags:
                - Healthcheck
            security: []
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/HealthCheckResult'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/auth/token:
        post:
            summary: User login
            tags:
                - Authentication
            security: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
            responses:
                200:
                    description: Authentication success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWTAuthenticationSuccess'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/InvalidCredentialsResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/auth/logout:
        post:
            summary: User logout
            tags:
                - Authentication
            security:
                -   bearerAuth: []
            responses:
                204:
                    description: Logout success
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                403:
                    $ref: '#/components/responses/AccessDeniedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/auth/refresh-token:
        post:
            summary: Refresh JWT access token
            tags:
                - Authentication
            security: []
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JWTTokenRefreshResult'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/InvalidCredentialsResponse'
                403:
                    $ref: '#/components/responses/AccessDeniedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/assignments:
        get:
            summary: List user assignments
            description: List current authenticated user assignments
            tags:
                - Assignments
            security:
                -   bearerAuth: []
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    assignments:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/Assignment'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                409:
                    $ref: '#/components/responses/ConflictResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
    /v1/bulk/assignments:
        post:
            summary: Bulk create users assignments
            description: Bulk create users assignments
            tags:
                - Assignments
                - Bulk
            security:
                -   apiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/BulkCreateOperation'
            responses:
                201:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkResult'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                413:
                    $ref: '#/components/responses/RequestEntityTooLargeResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
        patch:
            summary: Bulk update users assignments
            description: Bulk update users assignments
            tags:
                - Assignments
                - Bulk
            security:
                -   apiKeyAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: array
                            items:
                                $ref: '#/components/schemas/BulkUpdateOperation'
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BulkResult'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                413:
                    $ref: '#/components/responses/RequestEntityTooLargeResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/assignments/{assignmentId}/lti-link:
        get:
            summary: Gets LTI link for the given assignment
            tags:
                - LTI
            security:
                -   bearerAuth: []
            parameters:
                -   name: assignmentId
                    in: path
                    description: The ID of the assignment
                    required: true
                    schema:
                        type: integer
            responses:
                200:
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LtiRequest'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                404:
                    $ref: '#/components/responses/AssignmentNotFoundResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                409:
                    $ref: '#/components/responses/ConflictResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/line-items:
        get:
            summary: Gets a list of line items
            tags:
                - Line Items
            security:
                -   apiKeyAuth: []
            parameters:
                -   name: cursor
                    in: query
                    description: Cursor of the resultset
                    required: false
                    schema:
                        type: integer
                -   name: limit
                    in: query
                    description: Limit of the line items resultset
                    required: false
                    schema:
                        type: integer
                -   name: id
                    in: query
                    description: The Id(s) of the line-item. Can be a string or an array.
                    required: false
                    schema:
                        type: string
                -   name: label
                    in: query
                    description: The label(s) of the line-item(s). Can be a string or an array.
                    required: false
                    schema:
                        type: string
                -   name: slug
                    in: query
                    description: The slug(s) of the line-item(s). Can be a string or an array.
                    required: false
                    schema:
                        type: string
                -   name: uri
                    in: query
                    description: The URI(s) of the line-item(s). Can be a string or an array.
                    required: false
                    schema:
                        type: string
                -   name: startAt
                    in: query
                    description: The start date timestamp of the line-item(s)
                    required: false
                    schema:
                        type: integer
                    example: '1542880258'
                -   name: endAt
                    in: query
                    description: The end date timestamp of the line-item(s)
                    required: false
                    schema:
                        type: integer
                    example: '1542880258'
            responses:
                200:
                    description: Success
                    content:
                        application/xml:
                            schema:
                                $ref: '#/components/schemas/LineItemListResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                404:
                    $ref: '#/components/responses/AssignmentNotFoundResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                409:
                    $ref: '#/components/responses/ConflictResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
        post:
            summary: Creates or update an existing line item
            tags:
                - Line Items
            security:
                -   apiKeyAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LineItemCreateRequest'
            responses:
                201:
                    $ref: '#/components/responses/LineItemResponse'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/lti/outcome:
        post:
            summary: LTI 1.1 Basic Outcomes Service
            tags:
                - LTI
            security: []
            parameters:
                -   name: Authorization
                    description: OAuth authorization header, including OAuth parameters
                    in: header
                    schema:
                        type: string
                        example: Oauth realm="SimpleRoster", oauth_version="1.0", oauth_nonce="29f90c047a44b2ece73d00a09364d49b", oauth_timestamp="1313350943", oauth_consumer_key="lmsng.school.edu", oauth_body_hash="v%2BxFnmDSHV%2Fj29qhxLwkFILrtPo%3D",oauth_signature_method="HMAC-SHA1",oauth_signature="8auRpRdPY2KRXUrOyz3HKCs92y8%3D"
            requestBody:
                content:
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/LtiOutcomeRequest'
            responses:
                200:
                    $ref: '#/components/responses/UpdateOutcomeSuccessful'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
    /v1/lti1p3/outcome:
        post:
            summary: LTI 1.3 Basic Outcomes Service
            tags:
                - LTI
            security:
                -   bearerAuth: []
            parameters:
                -   name: Authorization
                    description: OAuth authorization header
                    in: header
                    schema:
                        type: string
                        example: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJ.eyJhdWQiOiJkZW1vIiwianRpI.BraFieX8LLYfAu5Pz5vpvzxTd
            requestBody:
                content:
                    application/xml:
                        schema:
                            $ref: '#/components/schemas/LtiOutcomeRequest'
            responses:
                200:
                    $ref: '#/components/responses/UpdateOutcomeSuccessful'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
    /v1/web-hooks/update-line-items:
        post:
            summary: Notify Api about new Delivery URIs to be updated
            tags:
                - web-hook
            security:
                -   basicAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateLineItemWebHook'
            responses:
                202:
                    description: Accepted
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
    /v1/bulk-create-users:
        post:
            summary: Bulk create user and assignments
            tags:
                - Bulk Create Users
            security:
                -   apiKeyAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/BulkCreateUserRequest'
            responses:
                201:
                    $ref: '#/components/responses/BulkCreateUserResponse'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/lti-instance/list:
        get:
            summary: Get list of LTI instances (with no secret data)
            tags:
                - LTI instance
            security:
                -   basicAuth: []
            responses:
                200:
                    $ref: '#/components/schemas/LtiInstanceList'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/lti-instance:
        post:
            summary: Create new LTI instance
            tags:
                - LTI instance
            security:
                -   basicAuth: []
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LtiInstanceWrite'
            responses:
                201:
                    $ref: '#/components/schemas/LtiInstanceRead'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

    /v1/lti-instance/{ltiInstanceId}:
        put:
            summary: Update LTI instance
            tags:
                - LTI instance
            security:
                -   basicAuth: []
            parameters:
                -   name: ltiInstanceId
                    in: path
                    description: The ID of the LTI instance
                    required: true
                    schema:
                        type: integer
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LtiInstanceWrite'
            responses:
                201:
                    $ref: '#/components/schemas/LtiInstanceRead'
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'
        delete:
            summary: Delete LTI instance
            tags:
                - LTI instance
            security:
                -   basicAuth: []
            parameters:
                -   name: ltiInstanceId
                    in: path
                    description: The ID of the LTI instance
                    required: true
                    schema:
                        type: integer
            responses:
                200:
                    description: test
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    message:
                                        type: string
                400:
                    $ref: '#/components/responses/BadRequestResponse'
                401:
                    $ref: '#/components/responses/UnauthorizedResponse'
                405:
                    $ref: '#/components/responses/MethodNotAllowedResponse'
                500:
                    $ref: '#/components/responses/InternalServerErrorResponse'

components:
    securitySchemes:
        apiKeyAuth:
            type: http
            scheme: bearer
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
        basicAuth:
            type: http
            scheme: basic
    schemas:
        Assignment:
            type: object
            properties:
                id:
                    type: integer
                    description: The assignment ID
                    example: 13
                username:
                    type: string
                    description: The username of the user who belongs to the assignment
                    example: johndoe
                state:
                    type: string
                    description: State of assignment
                    enum:
                        - ready
                        - started
                        - completed
                        - cancelled
                    example: started
                attemptsCount:
                    type: integer
                    description: Number of time this assignment has been attempted.
                    example: 2
                lineItem:
                    $ref: '#/components/schemas/LineItemResponse'
        LineItemResponse:
            type: object
            properties:
                slug:
                    type: string
                    description: Line Item external identifier
                    example: slug-1
                uri:
                    type: string
                    description: TAO Instance URI
                    example: my-tao-instance.com/tao.rdf#123456789
                label:
                    type: string
                    description: Label for assignment
                    example: Delivery of Test 1
                isActive:
                    type: boolean
                    description: Defines if Line Item is active/inactive
                    example: true
                startDateTime:
                    type: integer
                    description: The start DateTime as UNIX timestamp
                    example: 1542880258
                endDateTime:
                    type: integer
                    description: The end DateTime as UNIX timestamp
                    example: 1542880258
                maxAttempts:
                    type: integer
                    description: The maximum number of allowed attempts
                    example: 1
                updatedAt:
                    type: integer
                    description: The DateTime of last update as UNIX timestamp
                    example: 1542880258
        LineItemListResponse:
            type: object
            properties:
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/LineItemResponse'
                metadata:
                    type: object
                    properties:
                        pagination:
                            type: object
                            properties:
                                nextCursor:
                                    type: integer
                                    description: Id of next item
        LineItemCreateRequest:
            type: object
            properties:
                slug:
                    type: string
                    description: Line Item external identifier
                    example: slug-1
                uri:
                    type: string
                    description: TAO Instance URI
                    example: my-tao-instance.com/tao.rdf#123456789
                startDateTime:
                    type: string
                    format: date-time
                    description: The start DateTime as UNIX timestamp
                    example: 2021-01-01T00:00:00+0000
                endDateTime:
                    type: string
                    format: date-time
                    description: The start DateTime as UNIX timestamp
                    example: 2021-01-01T00:00:00+0000
        BulkCreateOperation:
            type: object
            properties:
                identifier:
                    type: string
                    description: Operation identifier
                    example: "user1"
        BulkUpdateOperation:
            type: object
            properties:
                identifier:
                    type: string
                    description: Operation identifier
                    example: "user1"
                attributes:
                    type: array
                    items: {}
                    description: Operation attributes
                    example: ["state": "cancelled"]
        UpdateLineItemWebHook:
            type: object
            properties:
                source:
                    type: string
                    format: uri
                events:
                    type: array
                    items:
                        type: object
                        properties:
                            eventId:
                                type: string
                            eventName:
                                type: string
                            triggeredTimestamp:
                                type: integer
                            eventData:
                                type: object
                                properties:
                                    alias:
                                        type: string
                                        description: This data should match with the line item slug on the simple roster context
                                    remoteDeliveryId:
                                        type: string
                                        description: Based on the match between alias and slug, this field will be the new uri on the matched line item
                                required:
                                    - remoteDeliveryId
                        required:
                            - eventId
                            - eventName
                            - triggeredTimestamp
                            - eventData
                    minItems: 1
            required:
                - events
        JWTAuthenticationSuccess:
            type: object
            properties:
                accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                refreshToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        JWTTokenRefreshResult:
            type: object
            properties:
                accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        BulkResult:
            type: object
            properties:
                data:
                    type: object
                    properties:
                        applied:
                            type: boolean
                            description: If the bulk has been correctly applied, or rollbacked.
                            example: true
                        results:
                            type: array
                            items: {}
                            example: ["user1": true]
        LtiRequest:
            type: object
            properties:
                ltiLink:
                    type: string
                    example: "http://infra_1.com"
                ltiParams:
                    $ref: '#/components/schemas/LtiRequestParams'
        LtiRequestParams:
            type: object
            properties:
                oauth_body_hash:
                    type: string
                oauth_consumer_key:
                    type: string
                oauth_nonce:
                    type: string
                oauth_signature:
                    type: string
                oauth_signature_method:
                    type: string
                oauth_timestamp:
                    type: string
                oauth_version:
                    type: string
                lti_message_type:
                    type: string
                lti_version:
                    type: string
                context_id:
                    type: integer
                context_label:
                    type: string
                context_title:
                    type: string
                context_type:
                    type: string
                roles:
                    type: string
                user_id:
                    type: integer
                lis_person_name_full:
                    type: string
                resource_link_id:
                    type: integer
                lis_outcome_service_url:
                    type: string
                lis_result_sourcedid:
                    type: integer
                launch_presentation_return_url:
                    type: string
                launch_presentation_locale:
                    type: string
                    example: 'it-IT'
        HealthCheckResult:
            type: object
            properties:
                isDoctrineConnectionAvailable:
                    type: boolean
                    description: Wether the doctrine connection is available or not
                isDoctrineCacheAvailable:
                    type: boolean
                    description: Wether the doctrine cache is available or not
        LtiOutcomeRequest:
            type: object
            properties:
                imsx_POXHeader:
                    type: object
                    properties:
                        imsx_POXRequestHeaderInfo:
                            type: object
                            properties:
                                imsx_version:
                                    type: string
                                    example: 'V1.0'
                                imsx_messageIdentifier:
                                    type: string
                                    example: 'message id'
                imsx_POXBody:
                    type: object
                    properties:
                        replaceResultRequest:
                            type: object
                            properties:
                                resultRecord:
                                    type: object
                                    properties:
                                        sourcedGUID:
                                            type: object
                                            properties:
                                                sourcedId:
                                                    type: integer
                                                    example: 1
                                        result:
                                            type: object
                                            properties:
                                                resultScore:
                                                    type: object
                                                    properties:
                                                        language:
                                                            type: string
                                                            example: 'en-us'
                                                        textString:
                                                            type: string
                                                            example: '0.5'
            xml:
                name: 'imsx_POXEnvelopeRequest'
                namespace: 'http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0'
        LtiOutcomeResponse:
            type: object
            properties:
                imsx_POXHeader:
                    type: object
                    properties:
                        imsx_version:
                            type: string
                            example: 'V1.0'
                        imsx_messageIdentifier:
                            type: string
                            example: 'message id'
                        imsx_statusInfo:
                            type: object
                            properties:
                                imsx_codeMajor:
                                    type: string
                                    example: 'success'
                                imsx_severity:
                                    type: string
                                    example: 'status'
                                imsx_description:
                                    type: string
                                    example: 'Assignment with Id 1 was updated'
                                imsx_messageRefIdentifier:
                                    type: integer
                                    example: 1
                                imsx_operationRefIdentifier:
                                    type: string
                                    example: 'replaceResult'
                imsx_POXBody:
                    type: object
                    properties:
                        replaceResultResponse:
                            type: object
            xml:
                name: 'imsx_POXEnvelopeResponse'
                namespace: 'http://www.imsglobal.org/services/ltiv1p1/xsd/imsoms_v1p0'
        BulkCreateUserRequest:
            type: object
            properties:
                lineItemSlug:
                    type: string
                    description: Slugs of line items seperated by commas
                    example: slug-1
                userPrefixes:
                    type: array
                    description: Names of users
                    example: QA,OAT,CUSTOMER
                quantity:
                    type: integer
                    description: Batch size is the number of users created for each  user-prefix
                    example: 100
                groupIdPrefix:
                    type: string
                    description: Group prefix to be used if load balancing configured to userGroupId
                    example: TestCollege
        Error:
            type: object
            properties:
                error:
                    type: object
                    properties:
                        message:
                            description: Error message.
                            example: 'error message'
                            type: string
                        trace:
                            description: Error trace.
                            example: 'error trace (if debug activated)'
                            type: string

        LtiInstanceCommonProperties:
            type: object
            properties:
                label:
                    type: string
                lti_link:
                    type: string
        LtiInstanceRead:
            allOf:
                -   type: object
                    properties:
                        id:
                            type: integer
                -   $ref: '#/components/schemas/LtiInstanceCommonProperties'
        LtiInstanceList:
            type: array
            items:
                $ref: '#/components/schemas/LtiInstanceRead'
        LtiInstanceWrite:
            allOf:
                -   $ref: '#/components/schemas/LtiInstanceCommonProperties'
                -   type: object
                    properties:
                        lti_key:
                            type: string
                        lti_secret:
                            type: string
    responses:
        BadRequestResponse:
            description: Bad request
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        UnauthorizedResponse:
            description: Unauthorized
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        AccessDeniedResponse:
            description: Access denied
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        InvalidCredentialsResponse:
            description: Invalid credentials
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        AssignmentNotFoundResponse:
            description: Assignment not found
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        MethodNotAllowedResponse:
            description: Method not allowed
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        ConflictResponse:
            description: Conflict
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        RequestEntityTooLargeResponse:
            description: Request Entity Too Large
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        InternalServerErrorResponse:
            description: Internal server error
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/Error'
        UpdateOutcomeSuccessful:
            description: Update Outcome Successful
            content:
                application/xml:
                    schema:
                        $ref: '#/components/schemas/LtiOutcomeResponse'
        LineItemResponse:
            description: Line Item response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LineItemResponse'
        LineItemListResponse:
            description: Line Item list response
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/LineItemListResponse'
        BulkCreateUserResponse:
            description: Bulk create user response
            content:
                application/json:
                    properties:
                        message:
                            type: string
                            description: Total number of users created message
                            example: '100 users created for line item slug-1 for user prefix DEPP,OAT,QA'
                        nonExistingLineItems:
                            type: array
                            description: Names of non existing line item slugs
                            example: LQA
