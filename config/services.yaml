# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
          # fetching services directly from the container via $container->get() won't work.
          # The best practice is to be explicit about your dependencies anyway.
        bind:
            $debug: '%kernel.debug%'
            $awsVersion: '%env(AWS_VERSION)%'
            $awsRegion: '%env(AWS_REGION)%'
            $ingesters: !tagged app.ingester

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Ingesting/Source,Ingesting/Exception,Model,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Action\:
        resource: '../src/Action'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\S3\S3ClientInterface:
        class: App\S3\AmazonS3Client
        shared: false
        arguments:
            $client: '@aws.s3'

    Aws\DynamoDb\Marshaler: ~

    App\ODM\StorageInterface:
        class: App\Storage\DynamoDbStorage
        arguments:
            $dynamoDbClient: '@Aws\DynamoDb\DynamoDbClient'
            $marshaler: '@Aws\DynamoDb\Marshaler'

    App\Ingesting\Ingester\InfrastructuresIngester:
        arguments:
            $rowToModelMapper: '@App\Ingesting\RowToModelMapper\InfrastructureRowToModelMapper'
        tags: ['app.ingester']

    App\Ingesting\Ingester\LineItemsIngester:
        arguments:
            $rowToModelMapper: '@App\Ingesting\RowToModelMapper\LineItemRowToModelMapper'
        tags: ['app.ingester']

    App\Ingesting\Ingester\UserAndAssignmentsIngester:
        arguments:
            $rowToModelMapper: '@App\Ingesting\RowToModelMapper\UserRowToModelMapper'
        tags: ['app.ingester']

    json_serializer_normalizer:
        class: Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer
        public: false
        tags: [serializer.normalizer]

    App\EventListener\UserCacheInvalidator:
        tags:
            - { name: doctrine.event_listener, event: onFlush }

    App\Repository\UserRepository:
        arguments:
            $userCacheTtl: '%env(USER_CACHE_TTL)%'
