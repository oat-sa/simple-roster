# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    app.api_key: '%env(resolve:APP_API_KEY)%'
    app.route_prefix: '%env(resolve:APP_ROUTE_PREFIX)%'
    app.assignment_state_interval_threshold: '%env(ASSIGNMENT_STATE_INTERVAL_THRESHOLD)%'
    app.cache.host: '%env(resolve:REDIS_DOCTRINE_CACHE_HOST)%'
    app.cache.port: '%env(int:REDIS_DOCTRINE_CACHE_PORT)%'
    app.cache.session.host: '%env(resolve:REDIS_SESSION_CACHE_HOST)%'
    app.cache.session.port: '%env(int:REDIS_SESSION_CACHE_PORT)%'
    app.cache.ttl.get_user_with_assignments: '%env(int:CACHE_TTL_GET_USER_WITH_ASSIGNMENTS)%'
    app.cache.ttl.lti_instance_list: '%env(int:CACHE_TTL_LTI_INSTANCES)%'
    app.lti.version: '%env(resolve:LTI_VERSION)%'
    app.lti.launch_presentation_return_url: '%env(resolve:LTI_LAUNCH_PRESENTATION_RETURN_URL)%'
    app.lti.launch_presentation_locale: '%env(resolve:LTI_LAUNCH_PRESENTATION_LOCALE)%'
    app.lti1p1.load_balancing_strategy: '%env(resolve:LTI_INSTANCE_LOAD_BALANCING_STRATEGY)%'
    app.lti1p3.registration_id: '%env(resolve:LTI1P3_REGISTRATION_ID)%'
    app.lti.outcome_xml_namespace: '%env(LTI_OUTCOME_XML_NAMESPACE)%'
    app.jwt.private_key_path: '%env(resolve:JWT_SECRET_KEY)%'
    app.jwt.public_key_path: '%env(resolve:JWT_PUBLIC_KEY)%'
    app.jwt.passphrase: '%env(resolve:JWT_PASSPHRASE)%'
    app.jwt.access_token_ttl: '%env(int:JWT_ACCESS_TOKEN_TTL)%'
    app.jwt.refresh_token_ttl: '%env(int:JWT_REFRESH_TOKEN_TTL)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $kernelEnvironment: '%kernel.environment%'
            $ltiLaunchPresentationReturnUrl: '%app.lti.launch_presentation_return_url%'
            $ltiLaunchPresentationLocale: '%app.lti.launch_presentation_locale%'
            $appApiKey: '%app.api_key%'
            $userCacheTtl: '%app.cache.ttl.get_user_with_assignments%'
            $ltiInstancesCacheTtl: '%app.cache.ttl.lti_instance_list%'
            $userWithAssignmentsCacheTtl: '%app.cache.ttl.get_user_with_assignments%'
            $ltiVersion: '%app.lti.version%'
            $ltiRegistrationId: '%app.lti1p3.registration_id%'
            $privateKeyPath: '%app.jwt.private_key_path%'
            $publicKeyPath: '%app.jwt.public_key_path%'
            $passphrase: '%app.jwt.passphrase%'
            $accessTokenTtl: '%app.jwt.access_token_ttl%'
            $refreshTokenTtl: '%app.jwt.refresh_token_ttl%'

    _instanceof:
        OAT\SimpleRoster\EventListener\Doctrine\EntityListenerInterface:
            tags: ['doctrine.orm.entity_listener']

    app.session_storage.connection:
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%app.cache.session.host%'
                    - '%app.cache.session.port%'

    app.doctrine_cache.connection:
        class: Redis
        calls:
            -   method: connect
                arguments:
                    - '%app.cache.host%'
                    - '%app.cache.port%'

    app.doctrine_cache.provider:
        class: Doctrine\Common\Cache\RedisCache
        calls:
            -   method: setRedis
                arguments:
                    - '@app.doctrine_cache.connection'

    OAT\SimpleRoster\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Model,Migrations,Tests,Kernel.php}'

    OAT\SimpleRoster\Action\:
        resource: '../src/Action'
        tags: ['controller.service_arguments']

    OAT\SimpleRoster\EventSubscriber\UserCacheInvalidationSubscriber:
        tags: ['doctrine.event_subscriber']

    OAT\SimpleRoster\Command\GarbageCollector\AssignmentGarbageCollectorCommand:
        arguments:
            $cleanUpInterval: '%app.assignment_state_interval_threshold%'

    OAT\SimpleRoster\Logger\UserRequestSessionLogProcessor:
        tags:
            - { name: 'monolog.processor', channel: 'request' }
            - { name: 'monolog.processor', channel: 'app' }
            - { name: 'monolog.processor', channel: 'security' }

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@app.session_storage.connection'

    OAT\SimpleRoster\Lti\LoadBalancer\LtiInstanceLoadBalancerInterface:
        factory: '@OAT\SimpleRoster\Lti\LoadBalancer\LtiInstanceLoadBalancerFactory'
        arguments:
            - '%app.lti1p1.load_balancing_strategy%'

    OAT\SimpleRoster\Lti\Extractor\ReplaceResultSourceIdExtractor:
        arguments:
            $xmlNamespace: '%app.lti.outcome_xml_namespace%'

    OAT\SimpleRoster\Storage\StorageRegistry:
        public: true
        arguments: [!tagged 'app.storage']

    Ramsey\Uuid\UuidFactoryInterface:
        class: Ramsey\Uuid\UuidFactory

    OAT\SimpleRoster\Lti\Factory\Lti1p1RequestFactory:
        lazy: true

    OAT\SimpleRoster\Lti\Factory\Lti1p3RequestFactory:
        lazy: true

    OAT\SimpleRoster\Lti\Factory\LtiRequestFactoryInterface:
        factory: '@OAT\SimpleRoster\Lti\Builder\LtiRequestFactoryBuilder'

    OAT\Library\Lti1p3Core\Security\User\UserAuthenticatorInterface:
        class: OAT\SimpleRoster\Security\Lti\OidcUserAuthenticator
