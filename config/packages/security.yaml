security:
    encoders:
        App\Entity\User:
            algorithm: argon2i
            # maximum memory (in KiB) that may be used to compute the Argon2 hash
            memory_cost: 4096
            #  number of times the Argon2 hash algorithm will be run
            time_cost: 3
            # number of threads to use for computing the Argon2 hash
            threads: 2

    providers:
        app_user_provider:
            id: App\Security\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        api:
            json_login:
                check_path: api_v1_auth_login
                remember_me: false
                failure_handler: App\Security\ApiAuthenticationFailureHandler

            # NOTE: the built-in "logout" mechanism is not usable here because it intercepts the request at the very beginning so no authorization happens

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    # - { path: ^/profile, roles: ROLE_USER }
