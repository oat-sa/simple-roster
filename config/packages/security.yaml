security:
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    password_hashers:
        Symfony\Component\Security\Core\User\User: plaintext
        OAT\SimpleRoster\Entity\User:
            # https://symfony.com/doc/current/reference/configuration/security.html#hashers
            algorithm: auto
            memory_cost: 1024
            cost: 4
            time_cost: 3
    providers:
        app_user_provider:
            id: OAT\SimpleRoster\Security\Provider\UserProvider
        basic_auth_provider:
            memory:
                users:
                    '%env(WEBHOOK_BASIC_AUTH_USERNAME)%':
                        password: '%env(WEBHOOK_BASIC_AUTH_PASSWORD)%'
                        roles:
                            - ROLE_USER

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api_key:
            pattern: '^%app.route_prefix%/v1/(bulk|line-items)'
            custom_authenticators:
                - OAT\SimpleRoster\Security\Authenticator\ApiKeyAuthenticator
            stateless: true
        lti1p3:
            pattern: '^%app.route_prefix%/v1/lti1p3/outcome'
            stateless: true
            provider: app_user_provider
            lti1p3_service: {
                scopes: [
                        'https://purl.imsglobal.org/spec/lti-bo/scope/basicoutcome'
                ]
            }
        webhooks:
            pattern: '^%app.route_prefix%/v1/web-hooks'
            stateless: true
            provider: basic_auth_provider
            http_basic:
                realm: 'Secured Webhooks'
        api:
            pattern: '^%app.route_prefix%/v1'
            stateless: true
            provider: app_user_provider
            custom_authenticators:
                - OAT\SimpleRoster\Security\Authenticator\JwtTokenAuthenticator
            json_login:
                check_path: getAccessToken
                remember_me: false
                success_handler: OAT\SimpleRoster\Security\Handler\AuthenticationSuccessHandler
            logout:
                path: logout

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: '^%app.route_prefix%/v1$', roles: PUBLIC_ACCESS }
        - { path: '^%app.route_prefix%/v1/lti1p1/outcome', roles: PUBLIC_ACCESS }
        - { path: '^%app.route_prefix%/v1/lti1p3/outcome', roles: PUBLIC_ACCESS }
        - { path: '^%app.route_prefix%/v1/web-hooks/update-line-items', roles: ROLE_USER }
        - { path: '^%app.route_prefix%/v1/auth/refresh-token', roles: PUBLIC_ACCESS }
        - { path: '^%app.route_prefix%/v1/(.)+', roles: IS_AUTHENTICATED_FULLY }
